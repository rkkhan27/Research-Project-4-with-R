rosca2 %>%
ggplot(aes(x = log.income, fill = factor(bg_married))) +
geom_histogram(position = 'identity', alpha = 0.75)
poverty %>%
ggplot(aes(x = log_stroop_time, fill = factor(treatment))) +
geom_histogram(position = 'identity', alpha = 0.75)
rosca2 %>%
ggplot(aes(x = score, y = fol2_amtinvest)) +
geom_point()
rosca2 %>%
ggplot(aes(x = score, y = fol2_amtinvest, color = factor(gender.factor))) +
geom_point() +
labs(x = 'Score', y = 'Amount Invested', title = 'Score vs Amount Invested')
# alternative base R code
plot(iris$Sepal.Length, iris$Petal.Width)
iris %>%
ggplot(aes(x = Sepal.Length, y = Petal.Width)) +
geom_point()
rosca2 %>%
ggplot(aes(x = score, y = fol2_amtinvest)) +
geom_point()
# Your code for 6a goes here
no_nacash_poverty %>%
ggplot(aes(x = log_cash, y = log_stroop_time, color = factor(treatment == "Before Payday"))) +
geom_point() +
labs(x = 'Log-transformed Cash - Financial Condition', y = 'Log-transformed cognitive performance', title = 'Fincancial condition vs Cognitive Performance')
poverty %>%
ggplot(aes(x = log_cash, y = log_stroop_time, color = factor(treatment == "Before Payday"))) +
geom_point() +
labs(x = 'Log-transformed Cash - Financial Condition', y = 'Log-transformed cognitive performance', title = 'Fincancial condition vs Cognitive Performance')
poverty %>%
ggplot(aes(x = log_cash, y = log_stroop_time, factor(treatment == "Before Payday"))) +
geom_point() +
labs(x = 'Log-transformed Cash - Financial Condition', y = 'Log-transformed cognitive performance', title = 'Fincancial condition vs Cognitive Performance')
poverty %>%
ggplot(aes(x = log_cash, y = log_stroop_time, factor(treatment == "Before Payday"))) +
geom_point() +
labs(x = 'Log-transformed Cash - Financial Condition', y = 'Log-transformed cognitive performance', title = 'Fincancial condition vs Cognitive Performance (Before Payday (Treatment Group')
poverty %>%
ggplot(aes(x = log_cash, y = log_stroop_time, factor(treatment == "Before Payday"))) +
geom_point() +
labs(x = 'Log-transformed Cash - Financial Condition', y = 'Log-transformed cognitive performance', title = 'Fincancial condition vs Cognitive Performance (Before Payday (Treatment Group)')
poverty %>%
ggplot(aes(x = log_cash, y = log_stroop_time, factor(treatment == "Before Payday"))) +
geom_point() +
labs(x = 'Log-transformed Cash - Financial Condition', y = 'Log-transformed cognitive performance', title = 'Fincancial condition vs Cognitive Performance (Before Payday (Treatment Group))')
#After Payday
poverty %>%
ggplot(aes(x = log_cash, y = log_stroop_time, factor(treatment == "After Payday"))) +
geom_point() +
labs(x = 'Log-transformed Cash - Financial Condition', y = 'Log-transformed cognitive performance', title = 'Fincancial condition vs Cognitive Performance (After Payday (Control Group))')
# Your code for 6a goes here
#Before Payday
poverty %>%
ggplot(aes(x = log_cash, y = log_stroop_time, factor(treatment == "Before Payday"))) +
geom_point() +
labs(x = 'Log-transformed Cash - Financial Condition', y = 'Log-transformed cognitive performance', title = 'Fincancial condition vs Cognitive Performance (Before Payday (Treatment Group))')
poverty %>%
ggplot(aes(x = log_cash, y = log_stroop_time, color = factor(treatment))) +
geom_point() +
labs(x = 'Log-transformed Cash - Financial Condition', y = 'Log-transformed cognitive performance', title = 'Fincancial condition vs Cognitive Performance (Before Payday (Treatment Group))')
#After Payday
poverty %>%
ggplot(aes(x = log_cash, y = log_stroop_time, factor(treatment == "After Payday"))) +
geom_point() +
labs(x = 'Log-transformed Cash - Financial Condition', y = 'Log-transformed cognitive performance', title = 'Fincancial condition vs Cognitive Performance (After Payday (Control Group))')
# Your code for 6a goes here
#Before Payday
poverty %>%
ggplot(aes(x = log_cash, y = log_stroop_time, factor(treatment == "Before Payday"))) +
geom_point() +
labs(x = 'Log-transformed Cash - Financial Condition', y = 'Log-transformed cognitive performance', title = 'Fincancial condition vs Cognitive Performance (Before Payday (Treatment Group))')
poverty %>%
ggplot(aes(x = cash)) +
geom_histogram()
# Load the poverty data; remember to put the csv file in a data sub-folder!
poverty.full <- read.csv("data/poverty.csv")
poverty.dropped <- read.csv("data/poverty.csv") %>% na.omit()
summary(poverty.full)
summaty(poverty.dropped)
summary(poverty.dropped)
# Your code for the cash variable goes here
# can remove x-axis values which are meaningless through this code
boxplot(poverty.dropped$cash)
# boxplot
poverty.dropped %>%
ggplot(aes(y = cash)) +
geom_boxplot()
poverty.dropped %>%
ggplot(aes(x = cash)) +
geom_histogram()
summary(poverty.dropped$cash)
mean(poverty.dropped$cash)
median(poverty.dropped$cash)
sd(poverty.dropped$cash)
range(poverty.dropped$cash)
quantile(poverty.dropped$cash, probs = c(0, 0.10, 0.5, 0.90, 1))
IQR(poverty.dropped$cash)
boxplot(poverty.dropped$accts_amt)
poverty.dropped %>%
ggplot(aes(x = accts_amt)) +
geom_histogram()
IQR(poverty.dropped$accts_amt)
poverty.dropped %>%
ggplot(aes(x = accts_amt)) +
geom_histogram()
poverty.dropped$log_cash <- log(poverty.dropped$log_cash)
# Your code for 3a goes here
poverty.dropped$log_cash <- poverty.dropped$cash
poverty.dropped$log_cash <- log(poverty.dropped$log_cash)
View(poverty.full)
View(poverty.full)
View(poverty.dropped)
View(poverty.dropped)
summary(poverty.dropped$log_cash)
poverty.dropped$log_cash[poverty.dropped$log_cash == 0] <- 1
poverty.dropped$log_cash <- log(poverty.dropped$log_cash)
# Your code for 3a goes here
poverty.dropped$log_cash <- poverty.dropped$cash
poverty.dropped$log_cash[poverty.dropped$log_cash == 0] <- 1
poverty.dropped$log_cash <- log(poverty.dropped$log_cash)
poverty.dropped$log_cash[poverty.dropped$log_cash == 0] <- 1
poverty.dropped$log_cash <- log(poverty.dropped$log_cash)
summary(poverty.dropped$log_cash)
IQR(poverty.dropped$log_cash)
boxplot(poverty.dropped$log_cash)
# boxplot
poverty.dropped %>%
ggplot(aes(y = log_cash)) +
geom_boxplot()
poverty.dropped %>%
ggplot(aes(x = log_cash)) +
geom_histogram()
# Your code for 4a goes here
poverty.dropped$z.cash = (poverty.dropped$cash) - mean(poverty.dropped$cash)/sd(poverty.dropped$cash)
summary(poverty.dropped$z.cash)
sd(poverty.dropped$z.cash)
boxplot(poverty.dropped$z.cash)
mean(poverty.dropped$z.cash > 2)
mean(no_nacash_poverty$z.log.cash > 3)
# Your code for the accounts variable goes here
poverty.droped %>%
ggplot(aes(y = accts_amt)) +
geom_boxplot()
library(tidyverse)
# You will need ggplot2 to make plots.
require("ggplot2")
install.packages("ggplot2")
# Load any other packages
# Load the poverty data; remember to put the csv file in a data sub-folder!
poverty.full <- read.csv("data/poverty.csv")
poverty.dropped <- read.csv("data/poverty.csv") %>% na.omit()
summary(poverty.full)
summary(poverty.dropped)poverty.droped <- read.csv("data/poverty.csv") %>% na.omit()
install.packages("ggplot2")
IQR(poverty.dropped$cash)
# Your code for the accounts variable goes here
poverty.droped %>%
ggplot(aes(y = accts_amt)) +
geom_boxplot()
summary(poverty.dropped)poverty.droped <- read.csv("data/poverty.csv") %>% na.omit()
summary(poverty.dropped)
# Your code for 3a goes here
poverty.dropped$log_cash <- poverty.dropped$cash
poverty.dropped$log_cash[poverty.dropped$log_cash == 0] <- 1
poverty.dropped$log_cash <- log(poverty.dropped$log_cash)
summary(poverty.dropped$log_cash)
poverty.dropped %>%
ggplot(aes(x = log_cash)) +
geom_histogram()
# Your code for 4a goes here
poverty.dropped$z.cash = (poverty.dropped$cash) - mean(poverty.dropped$cash)/sd(poverty.dropped$cash)
summary(poverty.dropped$z.cash)
mean(poverty.dropped$z.cash > 2)
# Your code for 4b goes here
poverty.dropped$z.log.cash = (poverty.dropped$log_cash) - mean(poverty.dropped$log_cash)/sd(poverty.dropped$log_cash)
mean(poverty.dropped$z.log.cash > 3)
# Your code for 5a goes here
means <- tapply(poverty.dropped$stroop_time, poverty.dropped$treatment, mean)
# look at those means
means
medians <- tapply(poverty.dropped$stroop_time, poverty.dropped$treatment, median)
medians
medians[2] - medians[1]
# Your code for 5b goes here
poverty.dropped %>%
ggplot(aes(x = factor(treatment), y = stroop_time)) +
geom_boxplot() +
labs(x = 'Treatment Condition', y = 'Log_trasnformed Average Response Time')
poverty.dropped %>%
ggplot(aes(x = stroop_time, fill = factor(treatment))) +
geom_histogram(position = 'identity', alpha = 0.75)
# Your code for 6a goes here
#Before Payday
povertyB.dropped <- poverty.dropped %>%
filter(treatment == "Before Payday")
povertyB.dropped %>%
ggplot(aes(x = log_cash, y = log_stroop_time, color = factor(treatment))) +
geom_point() +
labs(x = 'Financial Condition (Log-transformed Cash)', y = 'Cognitive Performance', title = 'Fincancial Condition vs Cognitive Performance (Before Payday (Treatment Group))')
povertyB.dropped %>%
ggplot(aes(x = log_cash, y = stroop_time, color = factor(treatment))) +
geom_point() +
labs(x = 'Financial Condition (Log-transformed Cash)', y = 'Cognitive Performance', title = 'Fincancial Condition vs Cognitive Performance (Before Payday (Treatment Group))')
# After Payday
povertyA.dropped <- poverty.dropped %>%
filter(treatment == "After Payday")
povertyA.dropped %>%
ggplot(aes(x = log_cash, y = stroop_time, color = factor(treatment))) +
geom_point() +
labs(x = 'Financial Condition (Log-transformed Cash)', y = 'Cognitive Performance', title = 'Fincancial Condition vs Cognitive Performance (After Payday (Control Group))')
ggplot(aes(x = log_cash, y = stroop_time, factor(treatment == "Before Payday"))) +
geom_point() +
labs(x = 'Log-transformed Cash - Financial Condition', y = 'Log-transformed cognitive performance', title = 'Fincancial condition vs Cognitive Performance (Before Payday (Treatment Group))')
povertyB.dropped %>%
ggplot(aes(x = log_cash, y = stroop_time, color = factor(treatment))) +
geom_point() +
labs(x = 'Financial Condition (Log-transformed Cash)', y = 'Cognitive Performance', title = 'Fincancial Condition vs Cognitive Performance (Before Payday (Treatment Group))')
povertyA.dropped %>%
ggplot(aes(x = log_cash, y = stroop_time, color = factor(treatment))) +
geom_point() +
labs(x = 'Financial Condition (Log-transformed Cash)', y = 'Cognitive Performance', title = 'Fincancial Condition vs Cognitive Performance (After Payday (Control Group))')
# Linear Correlation
cor(povertyB.dropped$log_cash, povertyB.dropped$stroop_time)
cor(povertyA.dropped$log_cash, povertyA.dropped$stroop_time)
# Linear Correlation
cor(povertyB.dropped$log_cash, povertyB.dropped$stroop_time)
cor(povertyA.dropped$log_cash, povertyA.dropped$stroop_time)
# Your code for 5a goes here
means <- tapply(poverty.dropped$stroop_time, poverty.dropped$treatment, mean)
# look at those means
means
# take the difference between elements of that vector of means
means[2] - means[1]
# look at those means
means
# take the difference between elements of that vector of means
means[2] - means[1]
medians[2] - medians[1]
# Linear Correlation
cor(povertyB.dropped$log_cash, povertyB.dropped$stroop_time)
cor(povertyA.dropped$log_cash, povertyA.dropped$stroop_time)
poverty.dropped %>%
ggplot(aes(x = log_cash, y = stroop_time)) +
geom_point() +
facet_wrap(~treatment)
library(tidyverse)
# You will need ggplot2 to make plots.
require("ggplot2")
install.packages("ggplot2")
# Load any other packages
# Load the poverty data; remember to put the csv file in a data sub-folder!
poverty.full <- read.csv("data/poverty.csv")
poverty.dropped <- read.csv("data/poverty.csv") %>% na.omit()
summary(poverty.full)
summary(poverty.dropped)
install.packages("ggplot2")
summary(poverty.full)
summary(poverty.dropped)
summary(poverty.full)
summary(poverty.dropped)
# Your code for the cash variable goes here
# can remove x-axis values which are meaningless through this code
boxplot(poverty.dropped$cash)
rosca2 %>%
ggplot(aes(x = income)) +
geom_boxplot()
library(tidyverse)
rosca2 <- read_csv("data/rosca2.csv")
rosca2 <- rosca2 %>%
mutate(gender.factor = factor(if_else(bg_female == 1, 'Female', 'Non-female')))
rosca2 %>%
ggplot(aes(x = score, fill = factor(gender.factor))) +
geom_histogram(position = 'identity', alpha = 0.5)
library(tidyverse)
rosca2 <- read_csv("data/rosca2.csv")
rosca2 <- rosca2 %>%
mutate(gender.factor = factor(if_else(bg_female == 1, 'Female', 'Non-female')))
rosca2 %>%
ggplot(aes(x = score, fill = factor(gender.factor))) +
geom_histogram(position = 'identity', alpha = 0.5)
rosca2 %>%
ggplot(aes(x = doc.visit)) +
geom_bar()
rosca2 %>%
ggplot(aes(x = income)) +
geom_boxplot()
# boxplot
poverty.dropped %>%
ggplot(aes(y = accts_amt)) +
geom_boxplot()
poverty.dropped %>%
ggplot(aes(x = accts_amt)) +
geom_histogram()
mean(poverty.dropped$cash)
summary(poverty.dropped$cash)
# Your code for the cash variable goes here
# can remove x-axis values which are meaningless through this code
boxplot(poverty.dropped$cash)
rosca2 %>%
ggplot(aes(x = factor(bg_married), y = log.income)) +
geom_boxplot() +
labs(x = 'Marital Status', y = 'Log of Income')
library(tidyverse)
rosca2 <- read_csv("data/rosca2.csv")
rosca2 <- rosca2 %>%
mutate(gender.factor = factor(if_else(bg_female == 1, 'Female', 'Non-female')))
rosca2 %>%
ggplot(aes(x = score, fill = factor(gender.factor))) +
geom_histogram(position = 'identity', alpha = 0.5)
rosca2 %>%
ggplot(aes(x = doc.visit)) +
geom_bar()
rosca2 %>%
ggplot(aes(x = income)) +
geom_boxplot()
rosca2 %>%
ggplot(aes(x = income)) +
geom_histogram()
rosca2 %>%
ggplot(aes(x = score)) +
geom_histogram()
cor(rosca2$score, rosca2$fol2_amtinvest)
rosca2 %>%
ggplot(aes(x = score, y = fol2_amtinvest)) +
geom_point()
rosca2 %>%
group_by(gender.factor) %>%
summarize(cor = cor(score, fol2_amtinvest))
rosca2 %>%
ggplot(aes(x = score, y = fol2_amtinvest, color = factor(gender.factor))) +
geom_point() +
labs(x = 'Score', y = 'Amount Invested', title = 'Score vs Amount Invested')
rosca2 %>%
ggplot(aes(x = factor(bg_married), y = log.income)) +
geom_boxplot() +
labs(x = 'Marital Status', y = 'Log of Income')
rosca2 <- rosca2 %>%
mutate(log.income = log(income))
rosca2 %>%
ggplot(aes(x = factor(bg_married), y = log.income)) +
geom_boxplot() +
labs(x = 'Marital Status', y = 'Log of Income')
poverty.dropped %>%
ggplot(aes(x = cash)) +
geom_histogram()
summary(poverty.dropped$cash)
rosca2 %>%
ggplot(aes(x = doc.visit)) +
geom_bar()
IQR(poverty.dropped$cash)
sd(poverty.dropped$cash)
quantile(poverty.dropped$cash, probs = c(0, 0.10, 0.5, 0.90, 1))
# Your code for the accounts variable goes here
#boxplot(poverty.dropped$accts_amt)
# boxplot
poverty.dropped %>%
ggplot(aes(y = accts_amt)) +
geom_boxplot()
poverty.dropped %>%
ggplot(aes(x = accts_amt)) +
geom_histogram()
summary(poverty.dropped$accts_amt)
IQR(poverty.dropped$accts_amt)
range(poverty.dropped$accts_amt)
sd(poverty.dropped$accts_amt)
boxplot(poverty.dropped$log_cash)
# Your code for 3a goes here
poverty.dropped$log_cash <- poverty.dropped$cash
poverty.dropped$log_cash[poverty.dropped$log_cash == 0] <- 1
poverty.dropped$log_cash <- log(poverty.dropped$log_cash)
summary(poverty.dropped$log_cash)
mean(poverty.dropped$log_cash)
median(poverty.dropped$log_cash)
sd(poverty.dropped$log_cash)
range(poverty.dropped$log_cash)
quantile(poverty.dropped$log_cash, probs = c(0, 0.10, 0.5, 0.90, 1))
IQR(poverty.dropped$log_cash)
boxplot(poverty.dropped$log_cash)
# boxplot
poverty.dropped %>%
ggplot(aes(y = log_cash)) +
geom_boxplot()
poverty.dropped %>%
ggplot(aes(x = log_cash)) +
geom_histogram()
boxplot(poverty.dropped$log_cash)
# boxplot
poverty.dropped %>%
ggplot(aes(y = log_cash)) +
geom_boxplot()
poverty.dropped %>%
ggplot(aes(x = log_cash)) +
geom_histogram()
#boxplot(poverty.dropped$log_cash)
# boxplot
poverty.dropped %>%
ggplot(aes(y = log_cash)) +
geom_boxplot()
poverty.dropped %>%
ggplot(aes(x = log_cash)) +
geom_histogram()
summary(poverty.dropped$log_cash)
IQR(poverty.dropped$log_cash)
range(poverty.dropped$log_cash)
sd(poverty.dropped$log_cash)
library(tidyverse)
rosca2 <- read_csv("data/rosca2.csv")
rosca2 <- rosca2 %>%
mutate(gender.factor = factor(if_else(bg_female == 1, 'Female', 'Non-female')))
rosca2 %>%
ggplot(aes(x = score, fill = factor(gender.factor))) +
geom_histogram(position = 'identity', alpha = 0.5)
rosca2 %>%
ggplot(aes(x = doc.visit)) +
geom_bar()
rosca2 %>%
ggplot(aes(x = income)) +
geom_boxplot()
rosca2 %>%
ggplot(aes(x = income)) +
geom_histogram()
rosca2 %>%
ggplot(aes(x = score)) +
geom_histogram()
cor(rosca2$score, rosca2$fol2_amtinvest)
rosca2 %>%
ggplot(aes(x = score, y = fol2_amtinvest)) +
geom_point()
rosca2 %>%
group_by(gender.factor) %>%
summarize(cor = cor(score, fol2_amtinvest))
rosca2 %>%
ggplot(aes(x = score, y = fol2_amtinvest, color = factor(gender.factor))) +
geom_point() +
labs(x = 'Score', y = 'Amount Invested', title = 'Score vs Amount Invested')
rosca2 <- rosca2 %>%
mutate(log.income = log(income))
rosca2 %>%
ggplot(aes(x = log.income)) +
geom_histogram() +
labs(x = 'Log Income', title = 'Histogram of Log Income')
rosca2 %>%
ggplot(aes(x = factor(bg_married), y = log.income)) +
geom_boxplot() +
labs(x = 'Marital Status', y = 'Log of Income')
tapply(rosca2$log.income, rosca2$bg_married, summary)
rosca2 %>%
ggplot(aes(x = log.income, fill = factor(bg_married))) +
geom_histogram(position = 'identity', alpha = 0.75)
summary(rosca2$z.income)
rosca2$z.income = (rosca2$income - mean(rosca2$income))/sd(rosca2$income)
summary(rosca2$z.income)
sd(rosca2$z.income)
rosca2 %>%
ggplot(aes(x = z.income)) +
geom_histogram()
rosca2$z.log.income = (rosca2$log.income - mean(rosca2$log.income))/sd(rosca2$log.income)
rosca2 %>%
ggplot(aes(x = z.log.income)) +
geom_histogram()
summary(rosca2$z.income)
sd(rosca2$z.income)
summary(rosca2$z.income)
summary(poverty.dropped$z.cash)
# Your code for 4a goes here
poverty.dropped$z.cash = (poverty.dropped$cash) - mean(poverty.dropped$cash)/sd(poverty.dropped$cash)
summary(poverty.dropped$z.cash)
sd(poverty.dropped$z.cash)
boxplot(poverty.dropped$z.cash)
mean(poverty.dropped$z.cash > 2)
summary(poverty.dropped$z.cash)
sd(poverty.dropped$z.cash)
boxplot(poverty.dropped$z.cash)
summary(poverty.dropped$z.cash)
mean(poverty.dropped$z.cash > 2)
mean(poverty.dropped$z.cash > 3)
# Your code for 4b goes here
poverty.dropped$z.log.cash = (poverty.dropped$log_cash) - mean(poverty.dropped$log_cash)/sd(poverty.dropped$log_cash)
summary(poverty.dropped$z.log.cash)
sd(poverty.dropped$z.log.cash)
boxplot(poverty.dropped$z.log.cash)
boxplot(poverty.dropped$z.cash)
summary(poverty.dropped$z.log.cash)
sd(poverty.dropped$z.log.cash)
summary(poverty.dropped$z.log.cash)
boxplot(poverty.dropped$z.log.cash)
mean(poverty.dropped$z.log.cash > 2)
mean(poverty.dropped$z.log.cash > 3)
# look at those means
means
# take the difference between elements of that vector of means
means[2] - means[1]
medians
medians[2] - medians[1]
poverty.dropped %>%
ggplot(aes(x = stroop_time, fill = factor(treatment))) +
geom_histogram(position = 'identity', alpha = 0.75)
# Your code for 5b goes here
poverty.dropped %>%
ggplot(aes(x = factor(treatment), y = stroop_time)) +
geom_boxplot() +
labs(x = 'Treatment Condition', y = 'Log_trasnformed Average Response Time')
poverty.dropped %>%
ggplot(aes(x = stroop_time, fill = factor(treatment))) +
geom_histogram(position = 'identity', alpha = 0.75)
# Linear Correlation
cor(povertyB.dropped$log_cash, povertyB.dropped$stroop_time)
cor(povertyA.dropped$log_cash, povertyA.dropped$stroop_time)
# Linear Correlation
cor(povertyB.dropped$log_cash, povertyB.dropped$stroop_time)
cor(povertyA.dropped$log_cash, povertyA.dropped$stroop_time)
